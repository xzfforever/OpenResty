
worker_processes 1;

error_log logs/err.log info;

events{
  worker_connections 1024;
}

http {
 
 access_log logs/access.log;
 
 init_by_lua_block {
  require "resty.core"
  collectgarbage("collect")
 }
 
 server {
   lua_code_cache off;
   listen 8090;
   location / {
     default_type text/html;
     content_by_lua_file lua/hello.lua;
    }
 }

 server {
  lua_code_cache off;
  listen 8080;

  # 测试的内部重定向的location
  location = /exec {
    content_by_lua_file lua/exec.lua;
  }

  location = /param {
     content_by_lua_file lua/param_check.lua;
  }


  location ~ ^/(\w+) {
	content_by_lua_file lua/$1.lua;

	  rewrite_by_lua_block {

        ngx.exit(0)

    	ngx.log(ngx.INFO, ngx.get_phase())

        local req_len = ngx.var.request_length
        ngx.ctx.len = tonumber(req_len)

        ngx.req.set_header("X-DEVICE","1111")

        ngx.exec("/exec", ngx.var.args)
       }

      access_by_lua_file lua/access.lua;
   }
 }

}
